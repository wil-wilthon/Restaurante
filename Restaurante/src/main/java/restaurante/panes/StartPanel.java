/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package restaurante.panes;

import restaurante.rules.Permissoes;
import restaurante.personalizacao.Personalizacoes;
import restaurante.personalizacao.CriarSubJanela;
import java.awt.BorderLayout;
import java.awt.Color;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JRootPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author User
 */
public final class StartPanel extends javax.swing.JPanel {
    private final List<Permissoes> permissoes;
    private final String nomeUsuario;
    public StartPanel(List<Permissoes> permissoes, String nomeUsuario) {
        initComponents();
        this.permissoes = permissoes;
        this.nomeUsuario = nomeUsuario;
        configurarBotoes(); // Configura os botões de acordo com as permissões
        personalizarInterface();
        CarregarUsuario();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label = new javax.swing.JLabel();
        vendasButton = new javax.swing.JButton();
        relButton = new javax.swing.JButton();
        estoqueButton = new javax.swing.JButton();
        managerButton = new javax.swing.JButton();
        pedidosButton = new javax.swing.JButton();
        usuarioButton = new javax.swing.JButton();

        label.setText("Saudações");
        label.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                Teste(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        vendasButton.setText("Vendas");
        vendasButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        relButton.setText("Relatórios");
        relButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        estoqueButton.setText("Estoque");
        estoqueButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        managerButton.setText("Configurações");
        managerButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        managerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managerButtonActionPerformed(evt);
            }
        });

        pedidosButton.setText("Pedidos");
        pedidosButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        usuarioButton.setText("Usuario");
        usuarioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usuarioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(226, Short.MAX_VALUE)
                .addComponent(pedidosButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(vendasButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(estoqueButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(relButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managerButton)
                .addGap(248, 248, 248))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(usuarioButton)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(422, 422, 422)
                .addComponent(label)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(usuarioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(managerButton)
                    .addComponent(relButton)
                    .addComponent(estoqueButton)
                    .addComponent(vendasButton)
                    .addComponent(pedidosButton))
                .addGap(117, 117, 117)
                .addComponent(label)
                .addContainerGap(197, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void Teste(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_Teste
        // TODO add your handling code here:
        if (this.permissoes.contains(Permissoes.MASTER)) {
            label.setText("Bem-vindo, Administrador do Sistema");
        }else if (this.permissoes.contains(Permissoes.ADMINISTRADOR)) {
            label.setText("Bem-vindo, Administrador!");
        } else if (this.permissoes.contains(Permissoes.ATENDIMENTO)) {
            label.setText("Bem-vindo, Atendente!");
        } else if (this.permissoes.contains(Permissoes.VENDAS)) {
            label.setText("Bem-vindo, Vendedor!");
        } else if (this.permissoes.contains(Permissoes.COZINHA)) {
            label.setText("Bem-vindo, Cozinheiro!");
        } else {
            label.setText("Bem-vindo!");
        }
    }//GEN-LAST:event_Teste

    private void managerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_managerButtonActionPerformed
            // Exibe o painel StartPanel de acordo com as permissões
            var managerPanel = new ManagerPanel(this.permissoes, this.nomeUsuario);
            JFrame startFrame = new JFrame("Configurações");
            startFrame.setSize(400, 300);
            startFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            startFrame.setLocationRelativeTo(null);
            startFrame.add(managerPanel);
            startFrame.setExtendedState(JFrame.MAXIMIZED_BOTH); // Maximiza o JFrame
            startFrame.setUndecorated(true);

            // Cria uma barra de título personalizada
            JPanel titleBar = Personalizacoes.criarBarraDeTituloPadrao(startFrame);

            // Usa um JRootPane para simular uma barra de título customizada
            JRootPane rootPane = startFrame.getRootPane();
            rootPane.setWindowDecorationStyle(JRootPane.NONE); // Remove a decoração padrão

            // Cria um painel principal e adiciona a barra de título customizada
            JPanel contentPane = new JPanel(new BorderLayout());
            contentPane.add(titleBar, BorderLayout.NORTH);
            contentPane.add(new ManagerPanel(this.permissoes, this.nomeUsuario), BorderLayout.CENTER);
            startFrame.setContentPane(contentPane);

            // Altera o ícone da janela (coloque o ícone na pasta resources ou no mesmo diretório)
            startFrame.setIconImage(new ImageIcon("/images/icon.png").getImage());

            startFrame.setVisible(true);
            JFrame loginFrame = (JFrame) SwingUtilities.getWindowAncestor(this);
            loginFrame.dispose();
    }//GEN-LAST:event_managerButtonActionPerformed

    private void usuarioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usuarioButtonActionPerformed
        CriarSubJanela.subMenuLougout(usuarioButton, (JFrame) this.getTopLevelAncestor());
    }//GEN-LAST:event_usuarioButtonActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton estoqueButton;
    private javax.swing.JLabel label;
    private javax.swing.JButton managerButton;
    private javax.swing.JButton pedidosButton;
    private javax.swing.JButton relButton;
    private javax.swing.JButton usuarioButton;
    private javax.swing.JButton vendasButton;
    // End of variables declaration//GEN-END:variables

    private void CarregarUsuario() {
        String seta = "↓";
        usuarioButton.setText(nomeUsuario + seta);

    }
    
    public void configurarBotoes() {
        // Oculta ou exibe os botões conforme as permissões
        if (permissoes.contains(Permissoes.MASTER)) {
            // Exibe todos os botões para Administrador Mestre
            managerButton.setVisible(true);
            relButton.setVisible(true);
            estoqueButton.setVisible(true);
            vendasButton.setVisible(true);
            pedidosButton.setVisible(true);
        } else if (permissoes.contains(Permissoes.ADMINISTRADOR)) {
            // Apenas o botão de configuração não é liberado para o Administrador
            managerButton.setVisible(false);
            relButton.setVisible(true);
            estoqueButton.setVisible(true);
            vendasButton.setVisible(true);
            pedidosButton.setVisible(true);
        } else if (permissoes.contains(Permissoes.VENDAS)) {
            // Apenas Vendas e Pedidos são visíveis
            managerButton.setVisible(false);
            relButton.setVisible(false);
            estoqueButton.setVisible(false);
            vendasButton.setVisible(true);
            pedidosButton.setVisible(false);
        } else if (permissoes.contains(Permissoes.ATENDIMENTO)) {
            // Apenas Vendas e Pedidos são visíveis
            managerButton.setVisible(false);
            relButton.setVisible(false);
            estoqueButton.setVisible(false);
            vendasButton.setVisible(false);
            pedidosButton.setVisible(true);
        } else if (permissoes.contains(Permissoes.COZINHA)) {
            // Apenas Pedidos são visíveis
            managerButton.setVisible(false);
            relButton.setVisible(false);
            estoqueButton.setVisible(false);
            vendasButton.setVisible(false);
            pedidosButton.setVisible(true);
        } else {
            // Nenhuma permissão encontrada, oculta todos os botões
            managerButton.setVisible(false);
            relButton.setVisible(false);
            estoqueButton.setVisible(false);
            vendasButton.setVisible(false);
            pedidosButton.setVisible(false);
        }
    }
    private void personalizarInterface() {
        // Cores temáticas de restaurante
        Color secondaryColor = new Color(255, 243, 224); // Creme claro

        // Personaliza os labels
        Personalizacoes.personalizarLabes(label, 32, true);
        
        // Personaliza o botão
        Personalizacoes.personalizarBotao(usuarioButton, 16, false,null,null);
        Personalizacoes.personalizarBotao(managerButton, 16, true,null,null);
        Personalizacoes.personalizarBotao(estoqueButton, 16, true,null,null);
        Personalizacoes.personalizarBotao(vendasButton, 16, true,null,null);
        Personalizacoes.personalizarBotao(pedidosButton, 16, true,null,null);
        Personalizacoes.personalizarBotao(relButton, 16, true,null,null);

        // Fundo do painel
        setBackground(secondaryColor);
    }
}
